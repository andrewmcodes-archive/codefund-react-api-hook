{"version":3,"sources":["../../src/utils.ts","../../src/lib/useCodeFundAd.ts","App.js","index.js"],"names":["fetchStatusHandler","response","status","Error","statusText","useCodeFundAd","id","ad","setCodeFundAd","loading","setLoading","error","setError","apiUrl","fetch","then","res","json","data","html","catch","e","undefined","CodeFund","process","AdLoading","AdMarkup","props","dangerouslySetInnerHTML","__html","count","width","borderRadius","Text","className","p","paragraphs","avgSentencesPerParagraph","App","React","Component","ReactDOM","render","document","getElementById"],"mappings":"2UAAgBA,EAAmBC,GACjC,GAAwB,MAApBA,EAASC,OACX,OAAOD,EAEP,MAAM,IAAIE,MAAMF,EAASG,Y,SCALC,EAAcC,GAC9B,2BAACC,EAAA,KAAIC,EAAA,KACL,yBAACC,EAAA,KAASC,EAAA,KACV,uBAACC,EAAA,KAAOC,EAAA,KAEd,OAAKN,GAGL,qBAAU,WACR,IAAMO,EAAS,sCAAsCP,EAAE,eACvDI,GAAW,GACXI,MAAMD,GACHE,KAAKf,GACLe,MAAK,SAAAC,GACJ,OAAOA,EAAIC,UAEZF,MAAK,SAAAG,GACJR,GAAW,GACXF,EAAcU,EAAKC,SAEpBC,OAAM,SAAAC,GACLb,OAAcc,GACdZ,GAAW,GACXE,EAASS,QAEZ,IAEI,CACLd,GAAE,EACFE,QAAO,EACPE,MAAK,IAxBE,CAAEJ,GAAE,EAAEE,QAAO,EAAEE,MAAK,GCU/B,SAASY,IAAY,IAAD,EACalB,EAC7BmB,OADMjB,EADU,EACVA,GAAIE,EADM,EACNA,QAASE,EADH,EACGA,MAGrB,OAAIF,EACK,kBAACgB,EAAD,MAGJd,OAAL,EACS,kBAACe,EAAD,CAAUnB,GAAIA,IAIzB,SAASmB,EAASC,GAChB,OAAO,yBAAKC,wBAAyB,CAAEC,OAAQF,EAAMpB,MAGvD,SAASkB,IACP,OAAO,kBAAC,IAAD,CAAUK,MAAO,EAAGC,MAAO,QAASC,aAAc,QAG3D,SAASC,EAAKN,GACZ,OACE,yBAAKO,UAAU,gBACb,kBAAC,aAAD,CAAYC,EAAGR,EAAMS,WAAYC,yBAA0B,MAKlDC,M,iLA1CX,OACE,oCACE,6DACA,kBAACL,EAAD,CAAMG,WAAY,IAClB,yBAAKF,UAAU,UACb,kBAACX,EAAD,OAEF,kBAACU,EAAD,CAAMG,WAAY,S,GATRG,IAAMC,WCCxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.c855ca45.chunk.js","sourcesContent":["export function fetchStatusHandler(response: any) {\n  if (response.status === 200) {\n    return response\n  } else {\n    throw new Error(response.statusText)\n  }\n}\n","import { useEffect, useState } from \"react\"\nimport { fetchStatusHandler } from \".././utils\"\nimport { ICodeFundAd, ICodeFundAdResponse } from \"../types\"\n\nexport default function useCodeFundAd(id: string): ICodeFundAdResponse {\n  const [ad, setCodeFundAd] = useState<ICodeFundAd | undefined>()\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<string | undefined>()\n\n  if (!id || process.env.NODE_ENV !== \"production\")\n    return { ad, loading, error }\n\n  useEffect(() => {\n    const apiUrl = `https://app.codefund.io/properties/${id}/funder.json`\n    setLoading(true)\n    fetch(apiUrl)\n      .then(fetchStatusHandler)\n      .then(res => {\n        return res.json()\n      })\n      .then(data => {\n        setLoading(false)\n        setCodeFundAd(data.html)\n      })\n      .catch(e => {\n        setCodeFundAd(undefined)\n        setLoading(false)\n        setError(e)\n      })\n  }, [])\n\n  return {\n    ad,\n    loading,\n    error,\n  }\n}\n","import React from \"react\"\nimport Skeleton from \"react-skeleton-loader\"\nimport { LoremIpsum } from \"react-lorem-ipsum\"\nimport { useCodeFundAd } from \"@codefund/react-api-hook\"\n\nclass App extends React.Component {\n  render() {\n    return (\n      <>\n        <h1>@codefund/react-api-hook Demo</h1>\n        <Text paragraphs={2} />\n        <div className=\"center\">\n          <CodeFund />\n        </div>\n        <Text paragraphs={6} />\n      </>\n    )\n  }\n}\n\nfunction CodeFund() {\n  const { ad, loading, error } = useCodeFundAd(\n    process.env.REACT_APP_CODEFUND_PROPERTY_ID\n  )\n  if (loading) {\n    return <AdLoading />\n  }\n\n  if (!error) {\n    return <AdMarkup ad={ad} />\n  }\n}\n\nfunction AdMarkup(props) {\n  return <div dangerouslySetInnerHTML={{ __html: props.ad }} />\n}\n\nfunction AdLoading() {\n  return <Skeleton count={5} width={\"330px\"} borderRadius={\"0px\"} />\n}\n\nfunction Text(props) {\n  return (\n    <div className=\"text-wrapper\">\n      <LoremIpsum p={props.paragraphs} avgSentencesPerParagraph={16} />\n    </div>\n  )\n}\n\nexport default App\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\n\nimport \"./index.css\"\nimport App from \"./App\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"))\n"],"sourceRoot":""}